统计所有小于非负整数 n 的质数的数量。

示例:

输入: 10
输出: 4
解释: 小于 10 的质数一共有 4 个, 它们是 2, 3, 5, 7 。

解法一：暴力法求解，不断的除比自己小的数，若余数为0则不是质数。
解法二：也是暴力法，但是在求出一个质数后，把其所有比它大的倍数都标记为false。如遇到false标记的数，则跳过。
最后统计为true的个数即为质数个数。此方法是典型的以空间换取时间的例子。

class Solution {
public:
    int countPrimes(int n) {

        if(n <= 2)
            return 0;

        bool primes[n];
        for(int i = 2; i < n; i++)
            primes[i] = true;

        for(int i = 2; i*i < n; i++)
        {
            if(primes[i])
                for(int j = 2*i; j < n; j+=i)
                    primes[j] = false;
        }


        int countOfPrimes = 0;
        for(int i = 2; i < n; i++)
        {
            if(primes[i])
                countOfPrimes++;
        }

        return countOfPrimes;
    }
};
