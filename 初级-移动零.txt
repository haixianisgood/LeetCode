给定一个数组 nums，编写一个函数将所有 0 移动到数组的末尾，同时保持非零元素的相对顺序。

示例:

输入: [0,1,0,3,12]
输出: [1,3,12,0,0]
说明:

必须在原数组上操作，不能拷贝额外的数组。
尽量减少操作次数。

解法：每次操作，数组中第一个零元素和该零元素后的第一个非零元素交换，直到遍历完整个数组。

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int zero = 0;
        int notZero = 0;
        while(notZero < nums.size()-1 && zero < nums.size()-1)
        {
            if(nums[notZero] == 0 || notZero <= zero)
                notZero++;

            if(nums[zero] != 0)
                zero++;

            swap(nums[zero], nums[notZero]);
        }
    }
};
