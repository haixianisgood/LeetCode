对称二叉树
给定一个二叉树，检查它是否是镜像对称的。

例如，二叉树 [1,2,2,3,4,4,3] 是对称的。

   1
  / \
 2   2
/ \ / \
3  4 4  3
但是下面这个 [1,2,2,null,3,null,3] 则不是镜像对称的:

   1
  / \
 2   2
  \   \
  3    3
说明:

如果你可以运用递归和迭代两种方法解决这个问题，会很加分。

递归法：对根节点的左子树和右子树同时进行递归，左子树和右子树的递归方向相反。左子树（根-左-右），右子树（根-右-左）。
迭代法：用一个数组，保持先序遍历的结果，如果对称，这个数组会是一个回文数组。

class Solution {
public:
    bool isSymmetric(TreeNode* root) {
        if(root == NULL)
            return true;

        return compare(root->left, root->right);
    }

    bool compare(TreeNode* left, TreeNode* right)
    {
        if(left == NULL && right == NULL)
            return true;

        if(left == NULL || right == NULL)
            return false;

        if(left->val != right->val)
            return false;

        if(!compare(left->left, right->right))
            return false;

        if(!compare(left->right, right->left))
            return false;

        return true;
    }
};
