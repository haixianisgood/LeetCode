将两个有序链表合并为一个新的有序链表并返回。新链表是通过拼接给定的两个链表的所有节点组成的。

示例：

输入：1->2->4, 1->3->4
输出：1->1->2->3->4->4

解法：交叉迭代，以头结点元素小的那个链表为起始结点和新的头结点。

class Solution {
public:
    ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1 == NULL || l2 == NULL)
        {
            if(l1 == NULL)
                return l2;

            if(l2 == NULL)
                return l1;
        }

        ListNode m(-1);
        ListNode* merge = &m;
        ListNode* p = merge;

        while(l1 || l2)
        {
            if(l1 && l2)
            {
                if(l1->val <= l2->val)
                {
                    p->next = l1;
                    l1 = l1->next;
                    p->next->next = NULL;
                }
                else
                {
                    p->next = l2;
                    l2 = l2->next;
                    p->next->next = NULL;
                }
            }
            else
            {
                if(l1)
                {
                    p->next = l1;
                    l1 = l1->next;
                    p->next->next = NULL;
                }

                if(l2)
                {
                    p->next = l2;
                    l2 = l2->next;
                    p->next->next = NULL;
                }
            }

            p = p->next;
        }

        p = merge->next;
        return p;
    }
};
