反转链表
反转一个单链表。

示例:

输入: 1->2->3->4->5->NULL
输出: 5->4->3->2->1->NULL
进阶:
你可以迭代或递归地反转链表。你能否用两种方法解决这道题？

解法一：递归，当到了最后一个结点，就开始递归地返回即可，注意要保存新的头结点。
解法二：迭代，用一个变量来保存当前结点的下一个结点即可，注意起始条件和结束条件。、

class Solution {
public:
    ListNode* reverseList(ListNode* head) {

        /*
        //递归法
        if(head == NULL)
            return head;

        if(head->next == NULL)
            return head;

        ListNode* p = head;
        head = reverseList(head->next);

        ListNode* q;
        for(q = head; q->next != NULL; q = q->next);

        p->next = NULL;
        q->next = p;

        return head;
        */

        //迭代法
        if(head == NULL)
            return head;

        if(head->next == NULL)
            return head;

        ListNode* newhead = head;
        ListNode* last = NULL;
        ListNode* p = newhead;
        while(p->next)
        {
            newhead = newhead->next;
            p->next = last;
            last = p;
            p = newhead;
        }

        newhead->next = last;

        return newhead;
    }
};
